% Created by Kuan-Min Lee
% Created date: Jan. 8th, 2023
% All rights reserved to Leelab.ai

% Brief User Introduction:
% This is the Mean Square Function used as a type of loss function for the
% training of neural network

% Input Parameter: 
% pred_image: prediction images generated by the neural network
% (multi-dimensional numerical array)
% grd_image: ground truth images included in the original dataset
% (multi-dimensional numerical array)
% Output Parameter:
% loss_val: loss value

function loss_val =loss_mse(pred_image,grd_image)
    % retrieve dimensional information from images
    disp("Calculating Loss...")
    % Retrieve the dimensionality of the train_image
    nd=ndims(train_image);
    % Process mse calculation
    [num_imgs,~]=size(pred_image);
    % creating temporarily variable for storing error value
    total_err=0;
    % looping through each image
    if nd==3
        for i_imgs=1:num_imgs
            curr_pred_image=pred_image(i_imgs,:,:);
            curr_grd_image=grd_image(i_imgs,:,:);
            curr_err=immse(curr_pred_image,curr_grd_image);
            total_err=total_err+curr_err;
        end
        loss_val=total_err/num_imgs;
    else
        for i_imgs=1:num_imgs
            curr_pred_image=pred_image(i_imgs,:,:,:);
            curr_grd_image=grd_image(i_imgs,:,:,:);
            curr_err=immse(curr_pred_image,curr_grd_image);
            total_err=total_err+curr_err;
        end
        loss_val=total_err/num_imgs;
    end

end

